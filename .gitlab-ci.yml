stages:
  - test

before_script:
- apt-get update -yqq
- apt-get install -yqq zip unzip
- pecl install xdebug
# Install PHP extensions
#- docker-php-ext-install pdo_mysql
- docker-php-ext-enable xdebug
# Install and run Composer
- curl -sS https://getcomposer.org/installer | php
- cd src
- php ../composer.phar require phpunit/phpunit
- php ../composer.phar install

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
test:7.1.1:
  stage: test
  # This file is a template, and might need editing before it works on your project.
  # Select image from https://hub.docker.com/_/php/
  image: php:7.1.1
  script:
  - vendor/bin/phpunit --configuration ../phpunit.xml --coverage-text --colors=never

test:7.0:
  stage: test
  # This file is a template, and might need editing before it works on your project.
  # Select image from https://hub.docker.com/_/php/
  image: php:7.0
  script:
  - vendor/bin/phpunit --configuration ../phpunit.xml --coverage-text --colors=never

test:5.6:
  stage: test
  # This file is a template, and might need editing before it works on your project.
  # Select image from https://hub.docker.com/_/php/
  image: php:5.6
  script:
  - vendor/bin/phpunit --configuration ../phpunit.xml --coverage-text --colors=never
  
test:latest:
  stage: test
  # This file is a template, and might need editing before it works on your project.
  # Select image from https://hub.docker.com/_/php/
  image: php:latest
  script:
  - vendor/bin/phpunit --configuration ../phpunit.xml --coverage-text --colors=never
  